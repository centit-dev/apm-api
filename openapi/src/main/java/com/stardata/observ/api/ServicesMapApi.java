/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.stardata.observ.api;

import java.util.Optional;

import javax.annotation.Generated;
import javax.validation.Valid;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import com.stardata.observ.vo.ServiceMapRequest;
import com.stardata.observ.vo.ServiceMapResponse;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "故障定位/服务地图定位", description = "the 故障定位/服务地图定位 API")
public interface ServicesMapApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /services-map : 创建服务地图
     * 根据查询条件创建服务地图数据返回，供前端绘制服务地图。  20240208，修改服务地图响应数据结构，并将其包含的span快照功能放到“创建span快照”接口中去。 20240311, 删除参数中的instance节点
     *
     * @param serviceMapRequest (optional)
     * @return 成功 (status code 200)
     */
    @Operation(
            operationId = "createServiceMap",
            summary = "创建服务地图",
            description = "根据查询条件创建服务地图数据返回，供前端绘制服务地图。  20240208，修改服务地图响应数据结构，并将其包含的span快照功能放到“创建span快照”接口中去。 20240311, 删除参数中的instance节点",
            tags = {"故障定位/服务地图定位", "20240208", "20240311"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "成功", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ServiceMapResponse.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.POST,
            value = "/services-map",
            produces = {"application/json"},
            consumes = {"application/json"}
    )

    default ResponseEntity<ServiceMapResponse> createServiceMap(
            @Parameter(name = "ServiceMapRequest", description = "") @Valid @RequestBody(required = false) ServiceMapRequest serviceMapRequest
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"data\" : { \"nodes\" : [ { \"cluster\" : \"cluster\", \"businessFaultCount\" : 5, \"software\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"instanceCount\" : 6, \"successCount\" : 1, \"systemFaultCount\" : 5, \"type\" : \"APP_CLUSTER\", \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" } }, { \"cluster\" : \"cluster\", \"businessFaultCount\" : 5, \"software\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"instanceCount\" : 6, \"successCount\" : 1, \"systemFaultCount\" : 5, \"type\" : \"APP_CLUSTER\", \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" } } ], \"edges\" : [ { \"duration\" : 2, \"businessFaultCount\" : 3, \"fromCluster\" : \"fromCluster\", \"toCluster\" : \"toCluster\", \"callCount\" : 7, \"successCount\" : 9, \"systemFaultCount\" : 2 }, { \"duration\" : 2, \"businessFaultCount\" : 3, \"fromCluster\" : \"fromCluster\", \"toCluster\" : \"toCluster\", \"callCount\" : 7, \"successCount\" : 9, \"systemFaultCount\" : 2 } ] }, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
