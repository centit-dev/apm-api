/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.stardata.observ.api;

import java.util.Optional;

import javax.annotation.Generated;

import com.stardata.observ.vo.CommonResponse;
import com.stardata.observ.vo.SpanDetailResponse;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import com.stardata.observ.vo.AppLogDetailListResponse;
import com.stardata.observ.vo.ServiceMapResponse;
import com.stardata.observ.vo.TraceDetailResponse;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "服务诊断", description = "the 服务诊断 API")
public interface TracesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /traces/{traceId}/spans/{spanId}/app-logs : 查询span内应用日志
     * 根据traceId和spanId查询其内包含的应用日志列表
     *
     * @param traceId 要查询应用日志的traceId (required)
     * @param spanId  要查询应用日志的trace下spanId (required)
     * @return 成功 (status code 200)
     */
    @Operation(
            operationId = "getSpanAppLogs",
            summary = "查询span内应用日志",
            description = "根据traceId和spanId查询其内包含的应用日志列表",
            tags = {"服务诊断", "20240208"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "成功", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = AppLogDetailListResponse.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/traces/{traceId}/spans/{spanId}/app-logs",
            produces = {"application/json"}
    )

    default ResponseEntity<AppLogDetailListResponse> getSpanAppLogs(
            @Parameter(name = "traceId", description = "要查询应用日志的traceId", required = true, in = ParameterIn.PATH) @PathVariable("traceId") String traceId,
            @Parameter(name = "spanId", description = "要查询应用日志的trace下spanId", required = true, in = ParameterIn.PATH) @PathVariable("spanId") String spanId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"data\" : [ { \"traceId\" : \"traceId\", \"cluster\" : \"cluster\", \"instance\" : \"instance\", \"scopeName\" : \"scopeName\", \"severityNumber\" : 3, \"logAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"body\" : \"body\", \"resourceAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"spanId\" : \"spanId\", \"severityText\" : \"severityText\", \"application\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"service\" : \"service\", \"scopeAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"timestamp\" : 6 }, { \"traceId\" : \"traceId\", \"cluster\" : \"cluster\", \"instance\" : \"instance\", \"scopeName\" : \"scopeName\", \"severityNumber\" : 3, \"logAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"body\" : \"body\", \"resourceAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"spanId\" : \"spanId\", \"severityText\" : \"severityText\", \"application\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"service\" : \"service\", \"scopeAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"timestamp\" : 6 } ], \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /traces/{traceId}/spans/{spanId} : 获取Span详情
     *
     * @param traceId (required)
     * @param spanId  (required)
     * @return 成功 (status code 200)
     */
    @Operation(
            operationId = "getSpanByTraceIdAndSpanId",
            summary = "获取Span详情",
            description = "",
            tags = {"Trace查询"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "成功", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = SpanDetailResponse.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/traces/{traceId}/spans/{spanId}",
            produces = {"application/json"}
    )

    default ResponseEntity<SpanDetailResponse> getSpanByTraceIdAndSpanId(
            @Parameter(name = "traceId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("traceId") String traceId,
            @Parameter(name = "spanId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("spanId") String spanId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"data\" : { \"traceId\" : \"traceId\", \"cluster\" : \"cluster\", \"requestAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"instance\" : \"instance\", \"software\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"responseAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"spanAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"serviceName\" : \"serviceName\", \"parentSpanId\" : \"parentSpanId\", \"resourceAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"spanName\" : \"spanName\", \"spanId\" : \"spanId\", \"duration\" : 1, \"application\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"logs\" : [ { \"traceId\" : \"traceId\", \"cluster\" : \"cluster\", \"instance\" : \"instance\", \"scopeName\" : \"scopeName\", \"severityNumber\" : 3, \"logAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"body\" : \"body\", \"resourceAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"spanId\" : \"spanId\", \"severityText\" : \"severityText\", \"application\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"service\" : \"service\", \"scopeAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"timestamp\" : 6 }, { \"traceId\" : \"traceId\", \"cluster\" : \"cluster\", \"instance\" : \"instance\", \"scopeName\" : \"scopeName\", \"severityNumber\" : 3, \"logAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"body\" : \"body\", \"resourceAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"spanId\" : \"spanId\", \"severityText\" : \"severityText\", \"application\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"service\" : \"service\", \"scopeAttributes\" : [ { \"value\" : \"value\", \"key\" : \"key\" }, { \"value\" : \"value\", \"key\" : \"key\" } ], \"timestamp\" : 6 } ], \"timestamp\" : 6 }, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /traces/{traceId} : 获取Trace详情
     * 根据traceID查询trace详情.   20231210修改了调用树返回模型，由单个对象该为返回array类型的调用树返回元素 20240208 修改trace详情返回信息内容，支持调用树、服务地图、span信息、resource信息 20240220 修改时间戳格式
     *
     * @param traceId UUID，traceId (required)
     * @return 成功 (status code 200)
     * or 数据不存在 (status code 404)
     */
    @Operation(
            operationId = "getTraceDetail",
            summary = "获取Trace详情",
            description = "根据traceID查询trace详情.   20231210修改了调用树返回模型，由单个对象该为返回array类型的调用树返回元素 20240208 修改trace详情返回信息内容，支持调用树、服务地图、span信息、resource信息 20240220 修改时间戳格式 ",
            tags = {"Trace查询", "20231104", "20231210", "20240208", "20240220"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "成功", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = TraceDetailResponse.class))
                    }),
                    @ApiResponse(responseCode = "404", description = "数据不存在", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = CommonResponse.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/traces/{traceId}",
            produces = {"application/json"}
    )

    default ResponseEntity<TraceDetailResponse> getTraceDetail(
            @Parameter(name = "traceId", description = "UUID，traceId", required = true, in = ParameterIn.PATH) @PathVariable("traceId") String traceId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"data\" : { \"brief\" : { \"traceId\" : \"traceId\", \"duration\" : 2, \"endpointAddress\" : \"endpointAddress\", \"spanCount\" : 7, \"appCluster\" : \"appCluster\", \"instanceNames\" : [ \"instanceNames\", \"instanceNames\" ], \"firstService\" : \"firstService\", \"startTime\" : 5, \"status\" : \"Unknown\", \"platforms\" : [ { \"displayName\" : \"displayName\", \"name\" : \"name\" }, { \"displayName\" : \"displayName\", \"name\" : \"name\" } ], \"applications\" : [ { \"displayName\" : \"displayName\", \"name\" : \"name\" }, { \"displayName\" : \"displayName\", \"name\" : \"name\" } ] }, \"spans\" : [ { \"traceId\" : \"traceId\", \"cluster\" : \"cluster\", \"spanKind\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"serviceName\" : \"serviceName\", \"parentSpanId\" : \"parentSpanId\", \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"spanName\" : \"spanName\", \"spanId\" : \"spanId\", \"duration\" : 1, \"application\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"isCause\" : true, \"faultKind\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"timestamp\" : 6 }, { \"traceId\" : \"traceId\", \"cluster\" : \"cluster\", \"spanKind\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"serviceName\" : \"serviceName\", \"parentSpanId\" : \"parentSpanId\", \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"spanName\" : \"spanName\", \"spanId\" : \"spanId\", \"duration\" : 1, \"application\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"isCause\" : true, \"faultKind\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"timestamp\" : 6 } ] }, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /traces/{traceId}/serviceMap : Trace服务地图
     *
     * @param traceId (required)
     * @return 成功 (status code 200)
     */
    @Operation(
            operationId = "getTraceServiceMap",
            summary = "Trace服务地图",
            description = "",
            tags = {"Trace查询"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "成功", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ServiceMapResponse.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/traces/{traceId}/serviceMap",
            produces = {"application/json"}
    )

    default ResponseEntity<ServiceMapResponse> getTraceServiceMap(
            @Parameter(name = "traceId", description = "", required = true, in = ParameterIn.PATH) @PathVariable("traceId") String traceId
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"code\" : 0, \"data\" : { \"nodes\" : [ { \"cluster\" : \"cluster\", \"businessFaultCount\" : 5, \"software\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"instanceCount\" : 6, \"successCount\" : 1, \"systemFaultCount\" : 5, \"type\" : \"APP_CLUSTER\", \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" } }, { \"cluster\" : \"cluster\", \"businessFaultCount\" : 5, \"software\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" }, \"instanceCount\" : 6, \"successCount\" : 1, \"systemFaultCount\" : 5, \"type\" : \"APP_CLUSTER\", \"platform\" : { \"displayName\" : \"displayName\", \"name\" : \"name\" } } ], \"edges\" : [ { \"duration\" : 2, \"businessFaultCount\" : 3, \"fromCluster\" : \"fromCluster\", \"toCluster\" : \"toCluster\", \"callCount\" : 7, \"successCount\" : 9, \"systemFaultCount\" : 2 }, { \"duration\" : 2, \"businessFaultCount\" : 3, \"fromCluster\" : \"fromCluster\", \"toCluster\" : \"toCluster\", \"callCount\" : 7, \"successCount\" : 9, \"systemFaultCount\" : 2 } ] }, \"message\" : \"message\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
